{"version":3,"sources":["apis/user-api.js","components/HeaderLabel.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Icon/Icon.js","pages/Profile.js"],"names":["getUsersByRole","role","a","axios","get","then","res","catch","err","console","log","response","getUserProjects","userId","cancelToken","getUserTickets","getAllUsers","getUser","updateUser","userUpdates","patch","useStyles","makeStyles","theme","span","borderRadius","backgroundColor","boxShadow","padding","HeaderLabel","text","classes","variant","component","className","Card","React","props","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardActions","_props$disableSpacing","disableSpacing","spacing","display","alignItems","marginLeft","CardContent","_props$component","Component","paddingBottom","Icon","_props$color","color","_props$fontSize","fontSize","concat","capitalize","muiName","userSelect","typography","pxToRem","width","height","flexShrink","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","card","maxWidth","margin","textAlign","marginTop","title","verticalAlign","textField","marginRight","submit","marginBottom","Profile","match","useContext","Context","dispatch","useState","password","email","open","values","setValues","payload","snackbarText","snackbarSeverity","useEffect","params","user","data","profile","handleChange","event","target","value","Fragment","Typography","TextField","id","label","onChange","type","Button","onClick","newValues","finally","OPENSNACKBAR"],"mappings":"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","file":"static/js/14.20c5c312.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n/**\r\n * Sends an api request to get a list of users by role.\r\n * @param {string} role - The desired \"role\" field to filter users by.\r\n * @returns Server response containing a list of users filtered by role.\r\n */\r\nconst getUsersByRole = async (role) => {\r\n    const response = await axios.get(`/api/users/role/${role}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to retrieve a user's projects.\r\n * @param {string} userId - The \"_id\" field of the requested user\r\n * @param {object} cancelToken - Axios cancel token.\r\n * @returns Server response containing list of projects where the user is in the team, the assigned dev, or submitter.\r\n */\r\nconst getUserProjects = async (userId, cancelToken) => {\r\n    const response = await axios.get(`/api/users/user/${userId}/projects`,{cancelToken: cancelToken})\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to return relevant tickets to the user.\r\n * @param {string} userId - The \"_id\" field of the user.\r\n * @param {object} cancelToken - Axios cancel token.\r\n * @returns Server response containing an array of the users tickets.\r\n */\r\nconst getUserTickets = async (userId, cancelToken) => {\r\n    const response = await axios.get(`/api/users/user/${userId}/tickets`, cancelToken)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to get all users in the database.\r\n * @param cancelToken - Axios cancel token.\r\n * @returns Server response returning an array containing user objects of all users.\r\n */\r\nconst getAllUsers = async (cancelToken) => {\r\n    const response = await axios.get(`/api/users`, {cancelToken: cancelToken})\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to retrieve a user object.\r\n * @param {string} userId - The \"_id\" field of the user to retrieve.\r\n * @returns Server response containing the user object\r\n */\r\nconst getUser = async (userId) => {\r\n    const response = await axios.get(`/api/users/user/${userId}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n/**\r\n * Send an api request that will update a user's values.\r\n * @param {string} userId - The \"_id\" field of the user to update\r\n * @param {object} userUpdates - Object containing new user values\r\n * @returns \r\n */\r\nconst updateUser = async (userId, userUpdates) => {\r\n    const response = await axios.patch(`/api/users/user/${userId}`, userUpdates)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n\r\n\r\nexport {\r\n    getUsersByRole,\r\n    getUserProjects,\r\n    getUserTickets,\r\n    getAllUsers,\r\n    getUser,\r\n    updateUser,\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    span: {\r\n        borderRadius: '3px',\r\n        backgroundColor: '#00adb5',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n        padding: '.4rem',\r\n\r\n    },\r\n}))\r\n\r\n\r\nconst HeaderLabel = ({ text }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Typography variant='h3' component='span' className={classes.span}>\r\n           {text}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default HeaderLabel","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = /*#__PURE__*/React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large'])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","import React, { useState, useEffect, useContext } from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport HeaderLabel from '../components/HeaderLabel'\r\nimport { getUser, updateUser } from '../apis/user-api'\r\nimport { Context } from '../global/Store'\r\nimport { OPENSNACKBAR } from '../helpers/constants'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    maxWidth: 600,\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    marginTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  error: {\r\n    verticalAlign: 'middle'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300\r\n  },\r\n  submit: {\r\n    margin: 'auto',\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst Profile = ({ match }) => {\r\n  const classes = useStyles()\r\n  const [, dispatch] = useContext(Context)\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    password: '',\r\n    email: '',\r\n    open: false,\r\n    error: '',\r\n  })\r\n\r\n  const payload = {\r\n    snackbarText: '',\r\n    snackbarSeverity: '',\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets user data to fill form.\r\n   */\r\n  useEffect(() => {\r\n    getUser(match.params.userId)\r\n      .then(res => {\r\n        const user = res.data.user\r\n        const userFullName = user.name\r\n        const profile = {\r\n          name: userFullName,\r\n          email: user.email,\r\n          password: '',\r\n        }\r\n        setValues(profile)\r\n      })\r\n  }, [match.params.userId])\r\n\r\n\r\n  /**\r\n   * Sends user input to update the user object in the database.\r\n   */\r\n  const handleSubmit = () => {\r\n    const newValues = {\r\n      name: values.name,\r\n      password: values.password,\r\n      email: values.email,\r\n    }\r\n    updateUser(match.params.userId, newValues)\r\n      .then(res => {\r\n        payload.snackbarText = 'Successfully changed user role'\r\n        payload.snackbarSeverity = 'success'\r\n      })\r\n      .catch(err => {\r\n        payload.snackbarText = 'Could not change users role. Try again later.'\r\n        payload.snackbarSeverity = 'error'\r\n\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: OPENSNACKBAR, payload: payload })\r\n      })\r\n  }\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderLabel text=\"My Profile\" />\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            Edit Profile\r\n          </Typography>\r\n          <TextField id=\"name\" label=\"Name\" className={classes.textField} value={values.name} onChange={handleChange('name')} margin=\"normal\" /><br />\r\n          <TextField id=\"email\" type=\"email\" label=\"Email\" className={classes.textField} value={values.email} onChange={handleChange('email')} margin=\"normal\" /><br />\r\n          <TextField id=\"password\" type=\"password\" label=\"Password\" className={classes.textField} value={values.password} onChange={handleChange('password')} margin=\"normal\" />\r\n          <br /> {\r\n            values.error && (<Typography component=\"p\" color=\"error\">\r\n              <Icon color=\"error\" className={classes.error}>error</Icon>\r\n              {values.error}\r\n            </Typography>)\r\n          }\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit} className={classes.submit}>Submit</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}