{"version":3,"sources":["components/Snackbar.js","core/Menu.js","components/PrivateRoute.js","core/MainRouter.js","theme.js","App.js","index.js","global/Reducer.js","global/Store.js","helpers/constants.js","apis/auth-api.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","Alert","props","elevation","variant","CustomizedSnackbars","open","handleClose","severity","text","classes","className","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","drawerWidth","display","link","color","textDecoration","title","flexGrow","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","padding","landingPage","Menu","window","children","useTheme","React","useState","mobileOpen","setMobileOpen","redirect","setRedirect","useContext","Context","store","dispatch","location","useLocation","useEffect","authCheck","then","res","user","data","payload","isLoggedIn","role","userId","_id","type","LOGIN","catch","e","options","Fragment","to","Button","handleDrawerToggle","drawerNavOptions","HomeIcon","BugReportIcon","AccountBoxIcon","adminNavOptions","AssignmentIndIcon","PeopleIcon","Divider","List","subheader","ListSubheader","component","map","index","label","address","Icon","ListItem","button","ListItemIcon","ListItemText","primary","onClick","logOut","LOGOUT","container","undefined","document","body","pathname","includes","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","snackbarIsOpen","CLOSESNACKBAR","snackbarSeverity","snackbarText","PrivateRoute","Component","rest","render","from","LandingPage","lazy","Login","SignUp","Home","TicketDetails","AdminTeams","AdminRoles","Profile","UserTickets","MainRouter","fallback","exact","path","createMuiTheme","typography","useNextVariants","palette","main","secondary","background","default","openTitle","protectedTitle","pink","App","Store","ThemeProvider","ReactDOM","getElementById","Reducer","state","action","snackbarPayload","socket","socketio","connect","initialState","createContext","SocketContext","useReducer","Provider","value","OPENSNACKBAR","connUser","userData","a","axios","post","err","console","log","response","get"],"mappings":"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","file":"static/js/main.ab44d8e8.chunk.js","sourcesContent":["import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}))\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\n\r\nexport default function CustomizedSnackbars({ open, handleClose, severity, text }) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n       open={open}\r\n        autoHideDuration={6000}\r\n         onClose={handleClose}\r\n         anchorOrigin={{ vertical:'top', horizontal:'center' }}\r\n         >\r\n        <Alert onClose={handleClose} severity={severity}>\r\n          {text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect, useContext } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport Hidden from '@material-ui/core/Hidden'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { logOut, authCheck } from '../apis/auth-api'\nimport { Context } from '../global/Store'\nimport { Link, Redirect, useLocation } from 'react-router-dom'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport SnackBar from '../components/Snackbar'\nimport HomeIcon from '@material-ui/icons/Home'\nimport BugReportIcon from '@material-ui/icons/BugReport'\nimport AccountBoxIcon from '@material-ui/icons/AccountBox'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd'\nimport PeopleIcon from '@material-ui/icons/People'\nimport {CLOSESNACKBAR, LOGIN, LOGOUT} from '../helpers/constants'\n\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  landingPage: {\n    flexGrow: 1,\n  },\n}))\n\nconst Menu = ({ window, children }) => {\n\n  /**\n   * Styling\n   */\n  const classes = useStyles()\n  const theme = useTheme()\n\n\n  const [mobileOpen, setMobileOpen] = React.useState(false)\n  const [redirect, setRedirect] = useState(false)\n  const [store, dispatch] = useContext(Context)\n\n  const location = useLocation()\n  /**\n   * Handles initial check to see if the user has a cookie\n   */\n  useEffect(() => {\n    authCheck().then((res) => {\n      const user = res.data.user\n      const payload = {\n        isLoggedIn: true,\n        role: user.role,\n        userId: user._id\n      }\n      dispatch({ type: LOGIN, payload: payload })\n    }).catch(e => null)\n    // eslint-disable-next-line\n  }, [])\n\n\n  /**\n   * Handles the logout function and redirects user to the landing page\n   */\n  const handleLogOut = () => {\n    logOut()\n    dispatch({ type: LOGOUT})\n    setRedirect(!redirect)\n  }\n\n  /**\n   * Displays the log in and sign up button in the navbar\n   * if the user is not logged in\n   */\n  const options = (\n    !store.isLoggedIn &&\n    <React.Fragment>\n      <Link to='/login' className={classes.link}><Button color=\"inherit\">Log In</Button></Link>\n      <Link to='/signup' className={classes.link}><Button color=\"inherit\">Sign Up</Button></Link>\n    </React.Fragment>\n  )\n\n  /**\n   * Opens the drawer\n   */\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen)\n  }\n\n  /**\n   * Navigation options displayed in the drawer when a user is signed in\n   */\n  const drawerNavOptions = [['Home', '', HomeIcon], ['My tickets', 'tickets', BugReportIcon], ['My Profile', `profile/${store.userId}`, AccountBoxIcon]]\n  const adminNavOptions = [['Manage User Roles', 'admin/user-roles', AssignmentIndIcon], ['Manage Project Teams', 'admin/teams', PeopleIcon]]\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List\n        subheader={\n          <ListSubheader component=\"div\">\n            Navigation\n          </ListSubheader>\n        }\n      >\n        {/* Map navigation options to the drawer */}\n        {\n          drawerNavOptions.map(([label, address, Icon], index) => (\n            <Link to={`/dashboard/${address}`} className={classes.link} key={label}>\n              <ListItem button >\n                <ListItemIcon><Icon /></ListItemIcon>\n                <ListItemText primary={label} />\n              </ListItem>\n            </Link>\n          ))\n        }\n\n        <ListItem button onClick={handleLogOut}>\n          <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n          <ListItemText primary='LogOut' />\n        </ListItem>\n      </List>\n\n      {/* Shows admin options if the user is classified as an admin the DB */}\n      {\n        store.role === 'Admin' &&\n        <React.Fragment>\n          <Divider />\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Admin Options\n        </ListSubheader>\n            }\n          >\n            {\n              adminNavOptions.map(([label, address, Icon], index) => (\n                <Link to={`/dashboard/${address}`} className={classes.link} key={label}>\n                  <ListItem button >\n                    <ListItemIcon><Icon /></ListItemIcon>\n                    <ListItemText primary={label} />\n                  </ListItem>\n                </Link>\n              ))\n            }\n          </List>\n        </React.Fragment>\n      }\n    </div>\n  )\n\n  const container = window !== undefined ? () => window().document.body : undefined\n\n  return (\n    /**\n     * If the route contains '/dashboard' the drawer will be rendered.\n     * Otherwise, the basic nav bar will be rendered.\n     */\n    location.pathname.includes('/dashboard') ?\n    (<div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            BugTracker\n          </Typography>\n          {options}\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n\n        <SnackBar\n          open={store.snackbarIsOpen}\n          handleClose={() => dispatch({ type: CLOSESNACKBAR })}\n          severity={store.snackbarSeverity}\n          text={store.snackbarText}\n        />\n      </main>\n    </div>)\n    : (\n      <div className={classes.root}>\n        {redirect && <Redirect to='/' />}\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              BugTracker\n          </Typography>\n\n            {options}\n\n          </Toolbar>\n        </AppBar>\n        <main className={!location.pathname === '/' ? classes.content : classes.landingPage}>\n          <div className={classes.toolbar} />\n          {children}\n        </main>\n      </div>\n    )\n\n  )\n}\n\nexport default Menu\n","import React, {useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { Context } from '../global/Store'\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const [store] = useContext(Context)\r\n    return (\r\n  <Route {...rest} render={props => (\r\n    store.isLoggedIn ? (\r\n      <Component {...props}/>\r\n    ) : (\r\n      <Redirect to={{\r\n        pathname: '/login',\r\n        store: { from: props.location }\r\n      }}/>\r\n    )\r\n  )}/>\r\n)}\r\n\r\nexport default PrivateRoute\r\n","import React, { Suspense, lazy } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Menu from './Menu'\r\nimport PrivateRoute from '../components/PrivateRoute'\r\n\r\n\r\nconst LandingPage = lazy(() => import('../pages/LandingPage'))\r\nconst Login = lazy(() => import('../pages/Login'))\r\nconst SignUp = lazy(() => import('../pages/Signup'))\r\nconst Home = lazy(() => import('../pages/Home'))\r\nconst TicketDetails = lazy(() => import('../pages/TicketDetails'))\r\nconst AdminTeams = lazy(() => import('../pages/AdminTeams'))\r\nconst AdminRoles = lazy(() => import('../pages/AdminRoles'))\r\nconst Profile = lazy(() => import('../pages/Profile'))\r\nconst UserTickets = lazy(() => import('../pages/UserTickets'))\r\n\r\n\r\nconst MainRouter = () => {\r\n    return (\r\n        <Menu>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n                <Switch>\r\n                    <Route exact path='/' component={LandingPage} />\r\n                    <Route exact path='/login' component={Login} />\r\n                    <Route exact path='/signup' component={SignUp} />\r\n                    <PrivateRoute exact path='/dashboard/tickets/' component={UserTickets} />\r\n                    <PrivateRoute exact path='/dashboard/profile/:userId' component={Profile} />\r\n                    <PrivateRoute exact path='/dashboard' component={Home} />\r\n                    <PrivateRoute exact path='/dashboard/projects/ticket/:ticketId' component={TicketDetails} />\r\n                    <PrivateRoute exact path='/dashboard/admin/teams' component={AdminTeams} />\r\n                    <PrivateRoute exact path='/dashboard/admin/user-roles' component={AdminRoles} />\r\n                </Switch>\r\n            </Suspense>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default MainRouter","import { createMuiTheme } from '@material-ui/core/styles'\nimport { pink } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: '#90e0ef',\n    },\n    secondary: {\n      main: '#d94734'\n    },\n    background: {\n      default: '#414554',\n    },\n    \n    openTitle: '#3f4771',\n    protectedTitle: pink['400'],\n    type: 'dark'\n    \n  },\n  \n\n  \n})\n\nexport default theme","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport MainRouter from './core/MainRouter'\nimport Store from './global/Store'\nimport { ThemeProvider } from '@material-ui/styles'\nimport theme from './theme'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\n\nfunction App() {\n\n  return (\n    \n      <Store>\n        <BrowserRouter>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <MainRouter />\n          </ThemeProvider>\n        </BrowserRouter>\n      </Store>\n    \n  )\n}\n\nexport default App\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n      <App/>,\r\n  document.getElementById('root')\r\n)\r\n\r\n","const Reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                ...action.payload,\n                isLoggedIn: true\n            }\n        case 'LOGOUT':\n            return {\n                ...state,\n                role: '',\n                userId: '',\n                isLoggedIn: false\n            }\n        case 'OPENSNACKBAR':\n            return {\n                ...state,\n                ...action.snackbarPayload,\n                snackbarIsOpen: true,\n            }\n        case 'CLOSESNACKBAR':\n            return {\n                ...state,\n                snackbarIsOpen: false,\n            }\n        default:\n            return state\n    }\n}\n\nexport default Reducer","import React, { createContext, useReducer } from \"react\"\nimport Reducer from './Reducer'\nimport socketio from \"socket.io-client\"\n\nconst socket = socketio.connect('http://localhost:5000')\n\nconst initialState = {\n    isLoggedIn: false,\n    role: null,\n    userId: null,\n    snackbarIsOpen: false,\n    snackbarText: '',\n    snackbarSeverity: '',\n}\n\nconst Store = ({ children }) => {\n    const [store, dispatch] = useReducer(Reducer, initialState)\n    return (\n        <SocketContext.Provider value={socket}>\n            <Context.Provider value={[store, dispatch]}>\n                {children}\n            </Context.Provider>\n        </SocketContext.Provider>\n    )\n}\n\nexport const Context = createContext()\nexport const SocketContext = createContext()\nexport default Store","\r\n\r\nconst snackbarPayload = {\r\n    snackbarText: '',\r\n    snackbarSeverity: '',\r\n}\r\n\r\nconst LOGOUT = 'LOGOUT'\r\nconst LOGIN = 'LOGIN'\r\nconst OPENSNACKBAR = 'OPENSNACKBAR'\r\nconst CLOSESNACKBAR = 'CLOSESNACKBAR'\r\n\r\nexport  {\r\n    snackbarPayload,\r\n    LOGOUT,\r\n    LOGIN,\r\n    OPENSNACKBAR,\r\n    CLOSESNACKBAR\r\n}\r\n","import axios from \"axios\"\n\n\n/**\n * \n * Connects existing users and creates new accounts for new users.\n * @param {object} userData - User object containing password, username, and , if creating new user, name\n */\nconst connUser = async (userData) => {\n    const response = await axios.post(\"/auth/conn\", userData)\n        .then(res => {\n            return res\n        })\n        .catch(err => {\n            console.log(err.response)\n            throw err\n        })\n\n    return response\n}\n\n/**\n * Sends an api request to server to validate a user's cookie.  \n */\nconst authCheck = async () => {\n    const response = await axios.get(\"/auth/authcheck\")\n        .then(res => {\n            return res\n        })\n        .catch(err => {\n            return err\n        })\n\n    return response\n}\n\n/**\n * Sends an api request to logout the user\n * \n */\nconst logOut = () => {\n    const response = axios.get(\"/auth/logout\")\n        .then(res => {\n            return res\n        })\n        .catch(err => {\n            console.log(err)\n            console.log(err.response)\n        })\n\n    return response\n}\n\nexport { connUser, authCheck, logOut }"],"sourceRoot":""}