{"version":3,"sources":["apis/user-api.js","components/HeaderLabel.js","components/Table.js","apis/project-api.js","components/DialogForm.js","components/ConfirmationDialog.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/Dialog/Dialog.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","../node_modules/@material-ui/icons/Delete.js","pages/TicketDetails.js"],"names":["getUsersByRole","role","a","axios","get","then","res","catch","err","console","log","response","getUserProjects","userId","getUserTickets","getAllUsers","getUser","updateUser","userUpdates","patch","useStyles","makeStyles","theme","span","borderRadius","backgroundColor","boxShadow","padding","HeaderLabel","text","classes","variant","component","className","paper","hover","selected","BasicTable","loading","handleSelect","title","data","dense","rowKey","tableHeight","emptyTableText","Error","useState","page","setPage","rowsPerPage","setRowsPerPage","rows","JSON","parse","stringify","forEach","row","_id","style","minHeight","maxHeight","table","aria-label","size","components","Object","keys","map","key","index","titleCaseKey","charAt","toUpperCase","slice","align","onClick","event","rowId","scope","border","length","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","target","value","createProject","projectData","post","deleteProject","projectId","delete","getProject","createTicket","ticket","deleteTicket","ticketId","updateTeam","newTeam","getTicket","deleteComment","commentId","postComment","comment","updateTicket","updatedTicket","dialogPaper","minWidth","input","display","formControl","margin","spacing","selectEmpty","marginTop","DialogForm","children","isOpen","handleOpen","dialogTitle","dialogDescription","titleTFValue","descriptionTFValue","handleChange","handleSubmit","error","open","aria-labelledby","id","color","autoFocus","label","type","onChange","e","fullWidth","multiline","ConfirmationDialog","handleConfirm","titleText","descriptionText","onClose","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","React","props","ref","BackdropProps","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","_objectWithoutProperties","mouseDownTarget","Modal","_extends","clsx","root","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","container","concat","capitalize","onMouseUp","currentTarget","current","onMouseDown","elevation","String","paperFullScreen","paperFullWidth","withStyles","position","scrollPaper","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","outline","paperScrollPaper","flexDirection","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","_defineProperty","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","name","DialogTitle","_props$disableTypogra","disableTypography","Typography","flex","DialogContent","_props$dividers","dividers","WebkitOverflowScrolling","paddingTop","borderTop","palette","divider","borderBottom","DialogContentText","marginBottom","DialogActions","_props$disableSpacing","disableSpacing","marginLeft","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","flexGrow","inline","TicketDetails","match","useContext","Context","store","dispatch","socket","SocketContext","redirect","setRedirect","comments","history","details","isLoading","setLoading","description","priority","status","form","setForm","newCommentText","setNewCommentText","setDetails","setHistory","setComments","devList","setDevList","devSelection","useRef","isConfOpen","setConfOpen","confAction","setConfAction","useEffect","params","submitterFullName","submitter","devFullName","assignedDev","localDate","Date","submissionDate","toLocaleDateString","toLocaleTimeString","userList","emit","on","prevComments","unshift","off","prevForm","handleFormChange","prevState","handleDeleteTicket","snackbarPayload","snackbarText","snackbarSeverity","finally","OPENSNACKBAR","handleOpenConfirmation","confirmAction","to","item","entries","overflow","primary","user","secondary","Fragment","timePosted","edge","disabled","options","newValue","renderInput","getOptionLabel","option"],"mappings":"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","file":"static/js/8.f18bc6eb.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n/**\r\n * Sends an api request to get a list of users by role.\r\n * @param {string} role - The desired \"role\" field to filter users by.\r\n * @returns Server response containing a list of users filtered by role.\r\n */\r\nconst getUsersByRole = async (role) => {\r\n    const response = await axios.get(`/api/users/${role}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to retrieve a user's projects.\r\n * @param {string} userId - The \"_id\" field of the requested user\r\n * @returns Server response containing list of projects where the user is in the team, the assigned dev, or submitter.\r\n */\r\nconst getUserProjects = async (userId) => {\r\n    const response = await axios.get(`/api/users/${userId}/projects`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to return relevant tickets to the user.\r\n * @param {string} userId - The \"_id\" field of the user\r\n * @returns Server response containing an array of the users tickets.\r\n */\r\nconst getUserTickets = async (userId) => {\r\n    const response = await axios.get(`/api/users/${userId}/tickets`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to get all users in the database.\r\n * @returns Server response returning an array containing user objects of all users.\r\n */\r\nconst getAllUsers = async () => {\r\n    const response = await axios.get(`/api/users`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to retrieve a user object.\r\n * @param {string} userId - The \"_id\" field of the user to retrieve.\r\n * @returns Server response containing the user object\r\n */\r\nconst getUser = async (userId) => {\r\n    const response = await axios.get(`/api/users/user/${userId}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n/**\r\n * Send an api request that will update a user's values.\r\n * @param {string} userId - The \"_id\" field of the user to update\r\n * @param {object} userUpdates - Object containing new user values\r\n * @returns \r\n */\r\nconst updateUser = async (userId, userUpdates) => {\r\n    const response = await axios.patch(`/api/users/user/${userId}`, userUpdates)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n\r\n\r\nexport {\r\n    getUsersByRole,\r\n    getUserProjects,\r\n    getUserTickets,\r\n    getAllUsers,\r\n    getUser,\r\n    updateUser,\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    span: {\r\n        borderRadius: '3px',\r\n        backgroundColor: '#00adb5',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n        padding: '.4rem',\r\n\r\n    },\r\n}))\r\n\r\n\r\nconst HeaderLabel = ({ text }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Typography variant='h3' component='span' className={classes.span}>\r\n           {text}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default HeaderLabel","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Typography } from '@material-ui/core'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    },\r\n    hover: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"#0899ba !important\"\r\n        }\r\n\r\n    },\r\n    selected: {\r\n        backgroundColor: \"#607d8b !important\"\r\n    },\r\n\r\n    span: {\r\n        padding: '1rem',\r\n    }\r\n})\r\n\r\nexport default function BasicTable({ loading, selected, handleSelect, title, data, hover, dense, rowKey, tableHeight, emptyTableText }) {\r\n\r\n    /**\r\n     * Handle cases where a table does not need a select function.\r\n     * Throw an error when key and height are not specified\r\n     */\r\n    if (!handleSelect) {\r\n        handleSelect = () => undefined\r\n    }\r\n    if (!rowKey) {\r\n        throw new Error('Component prop \"rowKey\" is not defined')\r\n    }\r\n    if (!tableHeight) {\r\n        throw new Error('Component prop \"tableHeight\" is not defined')\r\n    }\r\n\r\n    /**\r\n     * Styling\r\n     */\r\n    const classes = useStyles()\r\n\r\n    /**\r\n     * States used to manage the pages and rows displayed on a table\r\n     */\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(5)\r\n\r\n    /**\r\n     * Function to handle page changing in the table component.\r\n     * @param {object} event - Capture the event object\r\n     * @param {number} newPage - The number of the new page.\r\n     */\r\n    const handleChangePage = (event, newPage) => {\r\n        console.log(typeof newPage)\r\n        setPage(newPage)\r\n    }\r\n\r\n    /**\r\n     * Modifies the table component to handle the requested rows per page\r\n     * @param {object} event - Capture the event object.\r\n     */\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value)\r\n        setPage(0)\r\n    }\r\n\r\n    /**\r\n     * Determines if the ID selected is the the ID of the current row.\r\n     * @param {string} rowId - The rowId to be compared to the selectedId\r\n     * @returns True if the selected objects Id matches the rowId\r\n     */\r\n    const isSelected = rowId => selected === rowId\r\n\r\n    /**\r\n     * Deep copy the table data and remove the \"_id\" field to avoid it being\r\n     * displayed in the table.\r\n     */\r\n    const rows = JSON.parse(JSON.stringify(data))\r\n\r\n    rows.forEach(row => delete row._id)\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Typography variant='h4' component='span' className={classes.span}>\r\n                {title}\r\n            </Typography>\r\n            <TableContainer style={{ minHeight: tableHeight, maxHeight: tableHeight }}>\r\n                <Table\r\n                    className={classes.table}\r\n                    aria-label=\"simple table\"\r\n                    size={dense ? 'small' : 'medium'}\r\n                    components={{\r\n                    }}\r\n                >\r\n                    <TableHead>\r\n                        <TableRow>\r\n\r\n                            {/* Uses the first object in the array to create the table header */}\r\n                            {\r\n                                rows[0] &&\r\n                                Object.keys(rows[0]).map((key, index) => {\r\n                                    const titleCaseKey = key.charAt(0).toUpperCase() + key.slice(1)\r\n                                    if (index === 0) {\r\n                                        return <TableCell key={key + ' ' + index}>{titleCaseKey}</TableCell>\r\n                                    } else {\r\n                                        return <TableCell key={key + ' ' + index} align=\"center\">{titleCaseKey}</TableCell>\r\n                                    }\r\n\r\n                                })\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                        {/* Maps the data to the table */}\r\n                        {\r\n                            rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                <TableRow\r\n                                    classes={{ hover: classes.hover, selected: classes.selected }}\r\n                                    hover={hover}\r\n                                    key={row[rowKey] + ' ' + index}\r\n                                    onClick={(event) => {\r\n                                        handleSelect(event, data[index]._id)\r\n                                    }}\r\n                                    selected={hover && isSelected(data[index]._id)}\r\n                                >\r\n                                    {\r\n                                        Object.keys(row).map((key, index) => {\r\n                                            if (index === 0) {\r\n                                                return <TableCell key={key + ' ' + index} component=\"th\" scope=\"row\">\r\n                                                    {row[key]}\r\n                                                </TableCell>\r\n                                            } else {\r\n                                                return <TableCell key={key + ' ' + index} align=\"center\">{row[key]}</TableCell>\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n\r\n                        {/* Display spinner when data is loading */}\r\n                        {\r\n                            loading &&\r\n                            <TableRow>\r\n                                <TableCell align=\"center\" style={{ border: 'none' }}>\r\n                                    <CircularProgress size='8.5rem' />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        }\r\n\r\n                        {/* Displays text when table is empty and not loading */}\r\n                        {\r\n                            (!rows.length && !loading) &&\r\n                            <TableRow>\r\n                                <TableCell align=\"center\" style={{ border: 'none' }}>\r\n                                    <Typography variant='h4' className={classes.span}>\r\n                                        {emptyTableText}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper >\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\n/**\r\n * Sends an api request to create a new project.\r\n * @param {object} projectData - An object containing the \"title\" and \"description\" of the project.\r\n * @returns Server response.\r\n */\r\nconst createProject = async (projectData) => {\r\n    const response = await axios.post(\"/api/projects\", projectData)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to delete an existing project by project ID.\r\n * @param {string} projectId - The \"_id\" field of project to be deleted.\r\n * @returns  Server response.\r\n */\r\nconst deleteProject = async (projectId) => {\r\n    const response = await axios.delete(`/api/projects/${projectId}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to return the a json of a project by project ID.\r\n * @param {string} projectId  - The \"_id\" field of the project to be returned.\r\n * @returns  Server response containing project data or error\r\n */\r\nconst getProject = async (projectId) => {\r\n    const response = await axios.get(`/api/projects/${projectId}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to submit a ticket to a project.\r\n * @param {string} projectId - The \"_id\" field of the project that will recieve the ticket.\r\n * @param {object} ticket - The ticket object containing the tickets \"title\", \"description\", \"priority\", and \"type\"\r\n * @returns Server response\r\n */\r\nconst createTicket = async (projectId, ticket) => {\r\n    const response = await axios.post(`/api/projects/${projectId}/tickets`, ticket)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to delete a ticket.\r\n * @param {string} ticketId - The \"_id\" field of the ticket to be deleted\r\n * @returns Server response\r\n */\r\nconst deleteTicket = async (ticketId) => {\r\n    const response = await axios.delete(`/api/projects/ticket/${ticketId}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to update the team of a project\r\n * @param {string} projectId - The \"_id\" field of the project to be updated\r\n * @param {array} newTeam - An array containing the \"_id\" fields of the users to be set as the new team.\r\n * @returns Server response\r\n */\r\nconst updateTeam = async (projectId, newTeam) => {\r\n    const response = await axios.post(`/api/projects/${projectId}/team`, newTeam)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to retrieve a ticket.\r\n * @param {string} ticketId - The \"_id\" field of the project to return.\r\n * @returns Server response containing the ticket object.\r\n */\r\nconst getTicket = async (ticketId) => {\r\n    const response = await axios.get(`/api/projects/ticket/${ticketId}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to delete a comment from a ticket.\r\n * @param {string} commentId - The \"_id\" field of the comment to be deleted.\r\n * @returns Server response\r\n */\r\nconst deleteComment = async (commentId) => {\r\n    const response = await axios.delete(`/api/projects/ticket/comments/${commentId}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to post a comment on a ticket.\r\n * @param {string} ticketId - The \"_id\" field of the ticket to post the comment on.\r\n * @param {object} comment - Object containing the comment \"user\" and \"text\"\r\n * @returns Server response\r\n */\r\nconst postComment = async (ticketId, comment) => {\r\n    const response = await axios.post(`/api/projects/ticket/${ticketId}/comments`, comment)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n/**\r\n * Sends an api request to update a ticket.\r\n * @param {string} ticketId - The \"_id\" field of the ticket to update.\r\n * @param {object} updatedTicket - Object containing the updated values for the ticket\r\n * @returns Server response\r\n */\r\nconst updateTicket = async (ticketId, updatedTicket) => {\r\n    const response = await axios.patch(`/api/projects/ticket/${ticketId}`, updatedTicket)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n            throw err\r\n        })\r\n    return response\r\n}\r\n\r\n\r\nexport {\r\n    createProject,\r\n    deleteProject,\r\n    getProject,\r\n    createTicket,\r\n    deleteTicket,\r\n    getTicket,\r\n    updateTicket,\r\n    postComment,\r\n    deleteComment,\r\n    updateTeam,\r\n}","import React, { Fragment } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogPaper: {\r\n        minHeight: '40vh',\r\n        minWidth: '40vw',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    formControl: {\r\n        display: 'inline-block',\r\n        margin: theme.spacing(1),\r\n        minWidth: 100,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n\r\n}))\r\n\r\n\r\nconst DialogForm = ({ children, isOpen, handleOpen, dialogTitle, dialogDescription, titleTFValue, descriptionTFValue, handleChange, handleSubmit, error }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Fragment>\r\n            <Dialog classes={{ paper: classes.dialogPaper }} open={isOpen} aria-labelledby=\"form-dialog-title\">\r\n\r\n                <DialogTitle id=\"form-dialog-title\">{dialogTitle}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {dialogDescription}\r\n                        {\r\n                            (error !== '') && (<Typography component=\"p\" color=\"error\">\r\n                                {error}\r\n                            </Typography>)\r\n                        }\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"normal\"\r\n                        id=\"name\"\r\n                        label=\"Title\"\r\n                        type=\"text\"\r\n                        value={titleTFValue}\r\n                        onChange={(e) => handleChange(e.target.value, 'title')}\r\n                        error={!titleTFValue && (error !== '')}\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        id=\"name\"\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        rows={10}\r\n                        value={descriptionTFValue}\r\n                        onChange={(e) => handleChange(e.target.value, 'description')}\r\n                        error={!descriptionTFValue && (error !== '')}\r\n                        fullWidth\r\n                    />\r\n                    {children}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleOpen} variant=\"contained\" color=\"secondary\" fullWidth>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\" fullWidth>\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DialogForm","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nconst ConfirmationDialog = ({open, handleOpen, handleConfirm, titleText, descriptionText}) => {\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleOpen} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{titleText}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {descriptionText}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant='contained' color='secondary'onClick={handleOpen}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant='contained' color='primary' onClick={() => {handleConfirm(); handleOpen()}}>\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmationDialog","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import React, { useEffect, useRef, useState, useContext, Fragment } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { TextField, Typography } from '@material-ui/core'\r\nimport HeaderLabel from '../components/HeaderLabel'\r\nimport { getTicket, postComment, deleteComment, updateTicket, deleteTicket } from '../apis/project-api'\r\nimport { getUsersByRole } from '../apis/user-api'\r\nimport Table from '../components/Table'\r\nimport Button from '@material-ui/core/Button'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { Context, SocketContext } from '../global/Store'\r\nimport DialogForm from '../components/DialogForm'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { Redirect } from 'react-router-dom'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ConfirmationDialog from '../components/ConfirmationDialog'\r\nimport { OPENSNACKBAR, snackbarPayload } from '../helpers/constants'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  },\r\n  inline: {\r\n    display: 'block',\r\n  },\r\n\r\n}))\r\n\r\nconst TicketDetails = ({ match }) => {\r\n  const classes = useStyles()\r\n\r\n  const [store, dispatch] = useContext(Context)\r\n  const socket = useContext(SocketContext)\r\n\r\n  const [redirect, setRedirect] = useState(false)\r\n\r\n  const [isLoading, setLoading] = useState({\r\n    comments: false,\r\n    history: false,\r\n    details: false,\r\n  })\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    priority: '',\r\n    type: '',\r\n    status: '',\r\n    isOpen: false,\r\n    error: '',\r\n\r\n  })\r\n  const [newCommentText, setNewCommentText] = useState([])\r\n\r\n  const [details, setDetails] = useState([])\r\n  const [history, setHistory] = useState([])\r\n  const [comments, setComments] = useState([])\r\n\r\n  const [devList, setDevList] = useState([])\r\n  const devSelection = useRef()\r\n\r\n  const [isConfOpen, setConfOpen] = useState(false)\r\n  const [confAction, setConfAction] = useState(() => undefined)\r\n\r\n\r\n  /**\r\n   * Retrieves ticket data.\r\n   */\r\n  useEffect(() => {\r\n    setLoading({\r\n      comments: true,\r\n      history: true,\r\n      details: true,\r\n    })\r\n    getTicket(match.params.ticketId)\r\n      .then(res => {\r\n        const submitterFullName = res.data.ticket.submitter.name\r\n        const devFullName = res.data.ticket.assignedDev ? res.data.ticket.assignedDev.name : ''\r\n        devSelection.current = res.data.ticket.assignedDev\r\n        const localDate = new Date(res.data.ticket.submissionDate)\r\n        setComments(res.data.ticket.comments)\r\n        setHistory(res.data.ticket.history)\r\n        setDetails({\r\n          title: res.data.ticket.title,\r\n          description: res.data.ticket.description,\r\n          status: res.data.ticket.status,\r\n          'assigned dev': devFullName,\r\n          priority: res.data.ticket.priority,\r\n          type: res.data.ticket.type,\r\n          submitter: submitterFullName,\r\n          'submission date': localDate.toLocaleDateString() + ' ' + localDate.toLocaleTimeString(),\r\n        })\r\n        setLoading({\r\n          comments: false,\r\n          history: false,\r\n          details: false,\r\n        })\r\n      })\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  /**\r\n   * Gets a list of developers every time the dialog form is opened'\r\n   */\r\n  useEffect(() => {\r\n    if (!form.isOpen) {\r\n      setDevList([])\r\n    } else {\r\n      getUsersByRole('Developer')\r\n        .then(res => setDevList([...res.data.userList]))\r\n    }\r\n  }, [form.isOpen])\r\n\r\n  /**\r\n   * Subscribes the socket to new ticket updates\r\n   */\r\n  useEffect(() => {\r\n    socket.emit('ticket updates', match.params.ticketId)\r\n    return function cleanup() {\r\n      socket.emit('disconnect ticket updates', match.params.ticketId)\r\n    }\r\n  }, [socket, match.params.ticketId])\r\n\r\n  /**\r\n   * Upon recieving a new comment, it is appended to the current comments.\r\n   * Upon recieving any other updates, the ticket details and history are replaced.\r\n   */\r\n  useEffect(() => {\r\n    socket.on('newComment', comment => {\r\n      setComments(prevComments => { prevComments.unshift(comment); return prevComments })\r\n    })\r\n    socket.on('ticketUpdate', ticket => {\r\n      setHistory(ticket.history)\r\n      setDetails({\r\n        title: ticket.title,\r\n        description: ticket.description,\r\n        status: ticket.status,\r\n        'assigned dev': ticket.assignedDev ? ticket.assignedDev.name : '',\r\n        priority: ticket.priority,\r\n        type: ticket.type,\r\n        submitter: ticket.submitter.name,\r\n        'submission date': ticket.submissionDate,\r\n      })\r\n    })\r\n    return function cleanup() {\r\n      socket.off('newComment')\r\n      socket.off('ticketUpdate')\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  /**\r\n   * Handles user input in the comment box.\r\n   * @param {string} value - New comment value\r\n   */\r\n  const handleCommentText = value => {\r\n    setNewCommentText(value)\r\n  }\r\n\r\n  /**\r\n   * Opens the dialog form and sets the textfields to the ticket specs.\r\n   */\r\n  const handleOpen = () => {\r\n    console.log(details)\r\n    setForm(prevForm => ({\r\n      title: details.title,\r\n      description: details.description,\r\n      priority: details.priority,\r\n      type: details.type,\r\n      status: details.status,\r\n      isOpen: !prevForm.isOpen\r\n    }))\r\n  }\r\n\r\n  /**\r\n   * Handles user input in the form.\r\n   * @param {string} value - The new value.\r\n   * @param {string} name - name of the property to be updated in the form.\r\n   */\r\n  const handleFormChange = (value, name) => {\r\n    setForm(prevState => ({ ...prevState, [name]: value }))\r\n  }\r\n\r\n  /**\r\n   * Creates a comment object and submits it to the server.\r\n   */\r\n  const handlePostComment = () => {\r\n    const comment = {\r\n      user: store.userId,\r\n      text: newCommentText,\r\n    }\r\n\r\n    postComment(match.params.ticketId, comment)\r\n      .then(res => {\r\n        console.log(res)\r\n        snackbarPayload.snackbarText = 'Successfully posted comment'\r\n        snackbarPayload.snackbarSeverity = 'success'\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        snackbarPayload.snackbarText = 'Could not post comment. Try again later.'\r\n        snackbarPayload.snackbarSeverity = 'error'\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: OPENSNACKBAR, snackbarPayload: snackbarPayload })\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Handles the deletion of a comment.\r\n   * @param {string} commentId - The \"_id\" field of the comment to be deleted.\r\n   */\r\n  const handleDeleteComment = (commentId) => {\r\n    deleteComment(commentId)\r\n      .then(res => {\r\n        console.log(res)\r\n        snackbarPayload.snackbarText = 'Successfully deleted comment'\r\n        snackbarPayload.snackbarSeverity = 'success'\r\n      })\r\n      .catch(res => {\r\n        console.log(res)\r\n        snackbarPayload.snackbarText = 'Could not delete comment. Try again later.'\r\n        snackbarPayload.snackbarSeverity = 'error'\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: OPENSNACKBAR, snackbarPayload: snackbarPayload })\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Handles the submission of a ticket update in the dialog form.\r\n   */\r\n  const handleSubmitTicketUpdate = () => {\r\n    if (!form.title || !form.description) {\r\n      setForm(prevForm => ({ ...prevForm, error: 'Please fill in the required forms' }))\r\n    }\r\n    const ticket = {\r\n      title: form.title,\r\n      description: form.description,\r\n      status: form.status,\r\n      priority: form.priority,\r\n      type: form.type,\r\n    }\r\n    if (devSelection.current) {\r\n      ticket.assignedDev = devSelection.current._id\r\n    }\r\n    updateTicket(match.params.ticketId, ticket)\r\n      .then(res => {\r\n        console.log(res)\r\n        snackbarPayload.snackbarText = 'Successfully updated the ticket.'\r\n        snackbarPayload.snackbarSeverity = 'success'\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        snackbarPayload.snackbarText = 'Could not update the ticket. Try again later.'\r\n        snackbarPayload.snackbarSeverity = 'error'\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: OPENSNACKBAR, snackbarPayload: snackbarPayload })\r\n        handleOpen()\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Handles the deletion of the ticket.\r\n   */\r\n  const handleDeleteTicket = () => {\r\n    deleteTicket(match.params.ticketId)\r\n      .then(res => {\r\n        snackbarPayload.snackbarText = 'Successfully deleted the ticket.'\r\n        snackbarPayload.snackbarSeverity = 'success'\r\n        setRedirect(true)\r\n      })\r\n      .catch(res => {\r\n        snackbarPayload.snackbarText = 'Could not delete the ticket. Try again later.'\r\n        snackbarPayload.snackbarSeverity = 'error'\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: OPENSNACKBAR, snackbarPayload: snackbarPayload })\r\n      })\r\n\r\n  }\r\n\r\n  /**\r\n   * Manages the opening of the confirmation dialog.\r\n   * @param {function} confirmAction - The function to be called upon confirmation.\r\n   */\r\n  const handleOpenConfirmation = (confirmAction) => {\r\n    if (confirmAction) {\r\n      setConfOpen(prevState => !prevState)\r\n      setConfAction(confirmAction)\r\n    } else {\r\n      setConfOpen(prevState => !prevState)\r\n      setConfAction(() => undefined)\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {redirect && <Redirect to='/dashboard/projects' />}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <HeaderLabel text='Ticket Details' />\r\n        </Grid>\r\n\r\n        {/* Project Details section */}\r\n\r\n        <Grid container item xs={6}>\r\n          {\r\n            isLoading.details ?\r\n              <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n                <CircularProgress size='20rem' />\r\n              </Grid>\r\n              :\r\n              Object.entries(details).map(([key, value]) => {\r\n                return <Grid item xs={6} key={key + ' ' + value}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant='h5'>\r\n                      {key}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant='h6'>\r\n                      {value}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              })\r\n          }\r\n\r\n        </Grid>\r\n\r\n\r\n        <Grid container item xs={6} spacing={2}>\r\n          <Grid item xs={12} component={Paper} classes={{ root: classes.paper }}>\r\n            <Typography variant='h4'>\r\n              Comments\r\n            </Typography>\r\n            <List style={{ minHeight: '26vh', maxHeight: '26vh', overflow: 'auto' }}>\r\n\r\n              {\r\n                isLoading.comments &&\r\n                <ListItem style={{ width: '40%', margin: 'auto' }}>\r\n                  <CircularProgress size='12rem' />\r\n                </ListItem>\r\n              }\r\n\r\n              {\r\n                (!isLoading.comments && comments.length) ?\r\n                  comments.map((comment) => (\r\n                    <Fragment key={comment._id}>\r\n                      <ListItem alignItems=\"flex-start\">\r\n                        <ListItemText\r\n                          primary={comment.user.name}\r\n                          secondary={\r\n                            <React.Fragment>\r\n                              <Typography\r\n                                component=\"span\"\r\n                                variant=\"body2\"\r\n                                classes={{ root: classes.inline }}\r\n                                color=\"textPrimary\"\r\n                              >\r\n                                {comment.text}\r\n                              </Typography>\r\n                            Posted at: {comment.timePosted}\r\n                            </React.Fragment>\r\n                          }\r\n                        />\r\n                        <IconButton edge='start' onClick={() => handleOpenConfirmation(() => handleDeleteComment(comment._id))}>\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                      <Divider variant=\"inset\" component=\"li\" />\r\n                    </Fragment>\r\n                  ))\r\n                  :\r\n                  <ListItem style={{ width: '60%', margin: 'auto' }}>\r\n                    <Typography variant='h4'>\r\n                      No Comments Yet!\r\n                  </Typography>\r\n                  </ListItem>\r\n              }\r\n\r\n            </List>\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Add Comment\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              value={newCommentText}\r\n              onChange={e => handleCommentText(e.target.value)}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handlePostComment} disabled={!newCommentText}>\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={12}>\r\n          <Table\r\n            tableHeight='22vh'\r\n            loading={isLoading.history}\r\n            title='Ticket History'\r\n            data={history}\r\n            dense={true}\r\n            handleSelect={() => console.log()}\r\n            rowKey={'oldValue'}\r\n          />\r\n        </Grid>\r\n\r\n        {\r\n          ((store.role === \"Admin\") || (store.role === \"Project Manager\")) &&\r\n          <Fragment>\r\n            <Grid item xs={6}>\r\n              <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleOpen}>\r\n                Edit Ticket\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={() => handleOpenConfirmation(handleDeleteTicket)}>\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n          </Fragment>\r\n\r\n        }\r\n\r\n        {\r\n          (store.role === \"Developer\") &&\r\n          <Fragment>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleOpen}>\r\n                Edit Ticket\r\n              </Button>\r\n            </Grid>\r\n          </Fragment>\r\n\r\n        }\r\n\r\n\r\n\r\n      </Grid>\r\n      <DialogForm\r\n        isOpen={form.isOpen}\r\n        handleOpen={handleOpen}\r\n        handleChange={handleFormChange}\r\n        titleTFValue={form.title}\r\n        descriptionTFValue={form.description}\r\n        dialogTitle={'Edit Ticket'}\r\n        dialogDescription={'Edit the values below and click save'}\r\n        handleSubmit={handleSubmitTicketUpdate}\r\n        error={form.error}\r\n      >\r\n        <FormControl variant=\"filled\" className={classes.formControl} fullWidth>\r\n          <Autocomplete\r\n            options={['open', 'closed']}\r\n            value={form.status}\r\n            onChange={(e, newValue) => { handleFormChange(newValue, 'status') }}\r\n            renderInput={(params) => <TextField {...params} label=\"Status\" variant=\"outlined\" />}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"filled\" className={classes.formControl} fullWidth>\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={devList}\r\n            value={devSelection.current}\r\n            onChange={(e, newValue) => { devSelection.current = newValue; console.log(devSelection.current) }}\r\n            getOptionLabel={(option) => option.name}\r\n            renderInput={(params) => <TextField {...params} label=\"Assign a developer\" variant=\"outlined\" />}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"filled\" className={classes.formControl} fullWidth>\r\n          <Autocomplete\r\n            options={['high', 'medium', 'low', 'none']}\r\n            value={form.priority}\r\n            onChange={(e, newValue) => { handleFormChange(newValue, 'priority') }}\r\n            renderInput={(params) => <TextField {...params} label=\"Priority\" variant=\"outlined\" />}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"filled\" className={classes.formControl} fullWidth>\r\n          <Autocomplete\r\n            options={['bug']}\r\n            value={form.type}\r\n            onChange={(e, newValue) => { handleFormChange(newValue, 'type') }}\r\n            renderInput={(params) => <TextField {...params} label=\"Type\" variant=\"outlined\" />}\r\n          />\r\n        </FormControl>\r\n      </DialogForm>\r\n      <ConfirmationDialog\r\n        titleText='Confirm Action'\r\n        descriptionText='Are you sure you want to delete this?'\r\n        open={isConfOpen}\r\n        handleOpen={handleOpenConfirmation}\r\n        handleConfirm={confAction}\r\n      />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default TicketDetails\r\n"],"sourceRoot":""}